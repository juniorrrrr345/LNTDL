import { NextRequest, NextResponse } from 'next/server';
import { connectToDatabase } from '@/lib/mongodb';

export async function GET(request: NextRequest) {
  try {
    const { searchParams } = new URL(request.url);
    const type = searchParams.get('type'); // 'image' ou 'video'
    const limit = parseInt(searchParams.get('limit') || '50');
    
    console.log('üîç R√©cup√©ration cache partag√©:', { type, limit });

    const { db } = await connectToDatabase();
    const mediaCollection = db.collection('shared_media');
    
    // Construire la requ√™te
    let query: any = {};
    if (type) {
      query.type = type;
    }
    
    // R√©cup√©rer les m√©dias les plus r√©cents
    const media = await mediaCollection
      .find(query)
      .sort({ uploadedAt: -1 })
      .limit(limit)
      .toArray();
    
    console.log(`‚úÖ ${media.length} m√©dias partag√©s r√©cup√©r√©s`);
    
    return NextResponse.json({
      success: true,
      media: media,
      count: media.length
    });

  } catch (error: any) {
    console.error('‚ùå Erreur r√©cup√©ration cache partag√©:', error);
    return NextResponse.json(
      { error: error.message || 'Erreur r√©cup√©ration inconnue' },
      { status: 500 }
    );
  }
}

export async function POST(request: NextRequest) {
  try {
    const { url, type } = await request.json();
    
    console.log('üìä Mise √† jour statistiques d\'acc√®s:', { url, type });

    const { db } = await connectToDatabase();
    const mediaCollection = db.collection('shared_media');
    
    // Mettre √† jour les statistiques d'acc√®s
    await mediaCollection.updateOne(
      { url: url },
      { 
        $inc: { accessedCount: 1 },
        $set: { lastAccessed: new Date() }
      }
    );
    
    console.log('‚úÖ Statistiques d\'acc√®s mises √† jour');
    
    return NextResponse.json({
      success: true
    });

  } catch (error: any) {
    console.error('‚ùå Erreur mise √† jour statistiques:', error);
    return NextResponse.json(
      { error: error.message || 'Erreur mise √† jour inconnue' },
      { status: 500 }
    );
  }
}